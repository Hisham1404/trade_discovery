events {
    worker_connections 1024;
}

http {
    upstream discovery_cluster {
        server discovery-cluster:8000;
    }

    upstream execution_cluster {
        server execution-cluster:8000;
    }

    upstream risk_cluster {
        server risk-cluster:8000;
    }

    upstream monitoring {
        server grafana:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Health Check Endpoint
    server {
        listen 80;
        server_name localhost;
        
        location /health {
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
    }

    # Discovery Cluster API
    server {
        listen 80;
        server_name discovery.localhost;
        
        location / {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://discovery_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
    }

    # Execution Cluster API
    server {
        listen 80;
        server_name execution.localhost;
        
        location / {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://execution_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Risk Cluster API
    server {
        listen 80;
        server_name risk.localhost;
        
        location / {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://risk_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Monitoring Dashboard
    server {
        listen 80;
        server_name monitoring.localhost;
        
        location / {
            proxy_pass http://monitoring;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Main Trading API Gateway
    server {
        listen 80 default_server;
        server_name _;
        
        # Discovery endpoints
        location /api/v1/discovery/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://discovery_cluster/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Execution endpoints
        location /api/v1/execution/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://execution_cluster/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Risk endpoints
        location /api/v1/risk/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://risk_cluster/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Metrics endpoints
        location /metrics {
            proxy_pass http://discovery_cluster/metrics;
        }
        
        # Default response
        location / {
            return 200 "Trading Platform API Gateway";
            add_header Content-Type text/plain;
        }
    }
} 